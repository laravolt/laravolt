<?php

namespace :Namespace:\:ModuleName:;

use Livewire\Livewire;
use Laravolt\Support\Base\BaseServiceProvider;

class :ModuleName:ServiceProvider extends BaseServiceProvider
{
    public function boot()
    {
        parent::boot();
        Livewire::component('modules.:module-name:.:module-name:-table-view', :ModuleName:TableView::class);
    }

    public function getIdentifier(): string
    {
        return ':module-name:';
    }

    public function register(): void
    {
        $file = $this->packagePath("config/{$this->getIdentifier()}.php");
        $this->mergeConfigFrom($file, "modules.{$this->getIdentifier()}");
        $this->publishes([$file => config_path("modules/{$this->getIdentifier()}.php")], 'config');

        $configArray = config("modules.{$this->getIdentifier()}");
        if (is_array($configArray)) {
            $this->config = collect($configArray);
        }
    }

    protected function menu(): void
    {
        app('laravolt.menu.builder')->register(function ($menu) {
            if ($menu->modules) {
                $menu->modules
                    ->add(':Module Name:', route('modules:::module-name:.index'))
                    ->data('icon', 'circle')
                    ->data('permission', $this->config['permission'] ?? [])
                    ->active('modules/:module-name:/*');
            }
        });
    }

    protected function packagePath($path)
    {
        $rc = new \ReflectionClass(get_class($this));
        $dir = dirname($rc->getFileName());

        return sprintf('%s/%s', $dir, $path);
    }
}
